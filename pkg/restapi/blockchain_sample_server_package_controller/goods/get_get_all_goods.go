// Code generated by go-swagger; DO NOT EDIT.

package goods

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetGetAllGoodsHandlerFunc turns a function with the right signature into a get get all goods handler
type GetGetAllGoodsHandlerFunc func(GetGetAllGoodsParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGetAllGoodsHandlerFunc) Handle(params GetGetAllGoodsParams) middleware.Responder {
	return fn(params)
}

// GetGetAllGoodsHandler interface for that can handle valid get get all goods params
type GetGetAllGoodsHandler interface {
	Handle(GetGetAllGoodsParams) middleware.Responder
}

// NewGetGetAllGoods creates a new http.Handler for the get get all goods operation
func NewGetGetAllGoods(ctx *middleware.Context, handler GetGetAllGoodsHandler) *GetGetAllGoods {
	return &GetGetAllGoods{Context: ctx, Handler: handler}
}

/* GetGetAllGoods swagger:route GET /getAllGoods Goods getGetAllGoods

GetGetAllGoods get get all goods API

*/
type GetGetAllGoods struct {
	Context *middleware.Context
	Handler GetGetAllGoodsHandler
}

func (o *GetGetAllGoods) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetGetAllGoodsParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetGetAllGoodsOKBodyItems0 get get all goods o k body items0
//
// swagger:model GetGetAllGoodsOKBodyItems0
type GetGetAllGoodsOKBodyItems0 struct {

	// category
	Category string `json:"category,omitempty"`

	// key
	Key string `json:"key,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// price
	Price int64 `json:"price"`

	// wallet Id
	WalletID string `json:"walletId,omitempty"`
}

// Validate validates this get get all goods o k body items0
func (o *GetGetAllGoodsOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get get all goods o k body items0 based on context it is used
func (o *GetGetAllGoodsOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetGetAllGoodsOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGetAllGoodsOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetGetAllGoodsOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
